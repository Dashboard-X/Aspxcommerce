#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SageFrame.ModuleControls
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="SageFrame")]
	public partial class ModuleControlsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public ModuleControlsDataContext() : 
				base(global::SageFrame.Core.Properties.Settings.Default.TempforSpConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ModuleControlsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuleControlsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuleControlsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModuleControlsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[Function(Name="dbo.sp_ModuleControlsAdd")]
		public int sp_ModuleControlsAdd([Parameter(Name="ModuleControlID", DbType="Int")] ref System.Nullable<int> moduleControlID, [Parameter(Name="ModuleDefID", DbType="Int")] System.Nullable<int> moduleDefID, [Parameter(Name="ControlKey", DbType="NVarChar(50)")] string controlKey, [Parameter(Name="ControlTitle", DbType="NVarChar(50)")] string controlTitle, [Parameter(Name="ControlSrc", DbType="NVarChar(256)")] string controlSrc, [Parameter(Name="IconFile", DbType="NVarChar(100)")] string iconFile, [Parameter(Name="ControlType", DbType="Int")] System.Nullable<int> controlType, [Parameter(Name="DisplayOrder", DbType="Int")] System.Nullable<int> displayOrder, [Parameter(Name="HelpUrl", DbType="NVarChar(200)")] string helpUrl, [Parameter(Name="SupportsPartialRendering", DbType="Bit")] System.Nullable<bool> supportsPartialRendering, [Parameter(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [Parameter(Name="AddedOn", DbType="DateTime")] System.Nullable<System.DateTime> addedOn, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="AddedBy", DbType="NVarChar(256)")] string addedBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleControlID, moduleDefID, controlKey, controlTitle, controlSrc, iconFile, controlType, displayOrder, helpUrl, supportsPartialRendering, isActive, addedOn, portalID, addedBy);
			moduleControlID = ((System.Nullable<int>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_ModuleControlsGetByModuleDefinitions")]
		public ISingleResult<sp_ModuleControlsGetByModuleDefinitionsResult> sp_ModuleControlsGetByModuleDefinitions([Parameter(Name="ModuleDefID", DbType="Int")] System.Nullable<int> moduleDefID, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleDefID, portalID);
			return ((ISingleResult<sp_ModuleControlsGetByModuleDefinitionsResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_ModuleControlsGetByModuleControlID")]
		public ISingleResult<sp_ModuleControlsGetByModuleControlIDResult> sp_ModuleControlsGetByModuleControlID([Parameter(Name="ModuleControlID", DbType="Int")] System.Nullable<int> moduleControlID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleControlID);
			return ((ISingleResult<sp_ModuleControlsGetByModuleControlIDResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_ModuleControlsUpdate")]
		public int sp_ModuleControlsUpdate([Parameter(Name="ModuleControlID", DbType="Int")] System.Nullable<int> moduleControlID, [Parameter(Name="ControlKey", DbType="NVarChar(50)")] string controlKey, [Parameter(Name="ControlTitle", DbType="NVarChar(50)")] string controlTitle, [Parameter(Name="ControlSrc", DbType="NVarChar(256)")] string controlSrc, [Parameter(Name="IconFile", DbType="NVarChar(100)")] string iconFile, [Parameter(Name="ControlType", DbType="Int")] System.Nullable<int> controlType, [Parameter(Name="DisplayOrder", DbType="Int")] System.Nullable<int> displayOrder, [Parameter(Name="HelpUrl", DbType="NVarChar(200)")] string helpUrl, [Parameter(Name="SupportsPartialRendering", DbType="Bit")] System.Nullable<bool> supportsPartialRendering, [Parameter(Name="IsActive", DbType="Bit")] System.Nullable<bool> isActive, [Parameter(Name="IsModified", DbType="Bit")] System.Nullable<bool> isModified, [Parameter(Name="UpdatedOn", DbType="DateTime")] System.Nullable<System.DateTime> updatedOn, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="UpdatedBy", DbType="NVarChar(256)")] string updatedBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleControlID, controlKey, controlTitle, controlSrc, iconFile, controlType, displayOrder, helpUrl, supportsPartialRendering, isActive, isModified, updatedOn, portalID, updatedBy);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_ModuleControlsDeleteByModuleControlID")]
		public int sp_ModuleControlsDeleteByModuleControlID([Parameter(Name="ModuleControlID", DbType="Int")] System.Nullable<int> moduleControlID, [Parameter(Name="DeletedBy", DbType="NVarChar(256)")] string deletedBy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleControlID, deletedBy);
			return ((int)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_ModuleControlGetByUserModuleIDAndControlType")]
		public ISingleResult<sp_ModuleControlGetByUserModuleIDAndControlTypeResult> sp_ModuleControlGetByUserModuleIDAndControlType([Parameter(Name="UserModuleID", DbType="Int")] System.Nullable<int> userModuleID, [Parameter(Name="ControlType", DbType="Int")] System.Nullable<int> controlType, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(Name="Username", DbType="NVarChar(256)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userModuleID, controlType, portalID, username);
			return ((ISingleResult<sp_ModuleControlGetByUserModuleIDAndControlTypeResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.sp_CheckUnquieModuleControlsControlType")]
		public int sp_CheckUnquieModuleControlsControlType([Parameter(Name="ModuleControlID", DbType="Int")] System.Nullable<int> moduleControlID, [Parameter(Name="ModuleDefID", DbType="Int")] System.Nullable<int> moduleDefID, [Parameter(Name="ControlType", DbType="Int")] System.Nullable<int> controlType, [Parameter(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [Parameter(DbType="Bit")] System.Nullable<bool> isEdit, [Parameter(Name="Count", DbType="Int")] ref System.Nullable<int> count)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), moduleControlID, moduleDefID, controlType, portalID, isEdit, count);
			count = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
	}
	
	public partial class sp_ModuleControlsGetByModuleDefinitionsResult
	{
		
		private int _ModuleControlID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private string _ControlKey;
		
		private string _ControlTitle;
		
		private string _ControlSrc;
		
		private string _IconFile;
		
		private System.Nullable<int> _ControlType;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _HelpUrl;
		
		private System.Nullable<bool> _SupportsPartialRendering;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsModified;
		
		private System.Nullable<System.DateTime> _AddedOn;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.DateTime> _DeletedOn;
		
		private System.Nullable<int> _PortalID;
		
		private string _AddedBy;
		
		private string _UpdatedBy;
		
		private string _DeletedBy;
		
		public sp_ModuleControlsGetByModuleDefinitionsResult()
		{
		}
		
		[Column(Storage="_ModuleControlID", DbType="Int NOT NULL")]
		public int ModuleControlID
		{
			get
			{
				return this._ModuleControlID;
			}
			set
			{
				if ((this._ModuleControlID != value))
				{
					this._ModuleControlID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this._ModuleDefID = value;
				}
			}
		}
		
		[Column(Storage="_ControlKey", DbType="NVarChar(50)")]
		public string ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this._ControlKey = value;
				}
			}
		}
		
		[Column(Storage="_ControlTitle", DbType="NVarChar(50)")]
		public string ControlTitle
		{
			get
			{
				return this._ControlTitle;
			}
			set
			{
				if ((this._ControlTitle != value))
				{
					this._ControlTitle = value;
				}
			}
		}
		
		[Column(Storage="_ControlSrc", DbType="NVarChar(256)")]
		public string ControlSrc
		{
			get
			{
				return this._ControlSrc;
			}
			set
			{
				if ((this._ControlSrc != value))
				{
					this._ControlSrc = value;
				}
			}
		}
		
		[Column(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this._IconFile = value;
				}
			}
		}
		
		[Column(Storage="_ControlType", DbType="Int")]
		public System.Nullable<int> ControlType
		{
			get
			{
				return this._ControlType;
			}
			set
			{
				if ((this._ControlType != value))
				{
					this._ControlType = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[Column(Storage="_HelpUrl", DbType="NVarChar(200)")]
		public string HelpUrl
		{
			get
			{
				return this._HelpUrl;
			}
			set
			{
				if ((this._HelpUrl != value))
				{
					this._HelpUrl = value;
				}
			}
		}
		
		[Column(Storage="_SupportsPartialRendering", DbType="Bit")]
		public System.Nullable<bool> SupportsPartialRendering
		{
			get
			{
				return this._SupportsPartialRendering;
			}
			set
			{
				if ((this._SupportsPartialRendering != value))
				{
					this._SupportsPartialRendering = value;
				}
			}
		}
		
		[Column(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[Column(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_IsModified", DbType="Bit")]
		public System.Nullable<bool> IsModified
		{
			get
			{
				return this._IsModified;
			}
			set
			{
				if ((this._IsModified != value))
				{
					this._IsModified = value;
				}
			}
		}
		
		[Column(Storage="_AddedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedOn
		{
			get
			{
				return this._AddedOn;
			}
			set
			{
				if ((this._AddedOn != value))
				{
					this._AddedOn = value;
				}
			}
		}
		
		[Column(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[Column(Storage="_DeletedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedOn
		{
			get
			{
				return this._DeletedOn;
			}
			set
			{
				if ((this._DeletedOn != value))
				{
					this._DeletedOn = value;
				}
			}
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_AddedBy", DbType="NVarChar(256)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this._AddedBy = value;
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(256)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DeletedBy", DbType="NVarChar(256)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this._DeletedBy = value;
				}
			}
		}
	}
	
	public partial class sp_ModuleControlsGetByModuleControlIDResult
	{
		
		private int _ModuleControlID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private string _ControlKey;
		
		private string _ControlTitle;
		
		private string _ControlSrc;
		
		private string _IconFile;
		
		private System.Nullable<int> _ControlType;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _HelpUrl;
		
		private System.Nullable<bool> _SupportsPartialRendering;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsModified;
		
		private System.Nullable<System.DateTime> _AddedOn;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.DateTime> _DeletedOn;
		
		private System.Nullable<int> _PortalID;
		
		private string _AddedBy;
		
		private string _UpdatedBy;
		
		private string _DeletedBy;
		
		public sp_ModuleControlsGetByModuleControlIDResult()
		{
		}
		
		[Column(Storage="_ModuleControlID", DbType="Int NOT NULL")]
		public int ModuleControlID
		{
			get
			{
				return this._ModuleControlID;
			}
			set
			{
				if ((this._ModuleControlID != value))
				{
					this._ModuleControlID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this._ModuleDefID = value;
				}
			}
		}
		
		[Column(Storage="_ControlKey", DbType="NVarChar(50)")]
		public string ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this._ControlKey = value;
				}
			}
		}
		
		[Column(Storage="_ControlTitle", DbType="NVarChar(50)")]
		public string ControlTitle
		{
			get
			{
				return this._ControlTitle;
			}
			set
			{
				if ((this._ControlTitle != value))
				{
					this._ControlTitle = value;
				}
			}
		}
		
		[Column(Storage="_ControlSrc", DbType="NVarChar(256)")]
		public string ControlSrc
		{
			get
			{
				return this._ControlSrc;
			}
			set
			{
				if ((this._ControlSrc != value))
				{
					this._ControlSrc = value;
				}
			}
		}
		
		[Column(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this._IconFile = value;
				}
			}
		}
		
		[Column(Storage="_ControlType", DbType="Int")]
		public System.Nullable<int> ControlType
		{
			get
			{
				return this._ControlType;
			}
			set
			{
				if ((this._ControlType != value))
				{
					this._ControlType = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[Column(Storage="_HelpUrl", DbType="NVarChar(200)")]
		public string HelpUrl
		{
			get
			{
				return this._HelpUrl;
			}
			set
			{
				if ((this._HelpUrl != value))
				{
					this._HelpUrl = value;
				}
			}
		}
		
		[Column(Storage="_SupportsPartialRendering", DbType="Bit")]
		public System.Nullable<bool> SupportsPartialRendering
		{
			get
			{
				return this._SupportsPartialRendering;
			}
			set
			{
				if ((this._SupportsPartialRendering != value))
				{
					this._SupportsPartialRendering = value;
				}
			}
		}
		
		[Column(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[Column(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_IsModified", DbType="Bit")]
		public System.Nullable<bool> IsModified
		{
			get
			{
				return this._IsModified;
			}
			set
			{
				if ((this._IsModified != value))
				{
					this._IsModified = value;
				}
			}
		}
		
		[Column(Storage="_AddedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedOn
		{
			get
			{
				return this._AddedOn;
			}
			set
			{
				if ((this._AddedOn != value))
				{
					this._AddedOn = value;
				}
			}
		}
		
		[Column(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[Column(Storage="_DeletedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedOn
		{
			get
			{
				return this._DeletedOn;
			}
			set
			{
				if ((this._DeletedOn != value))
				{
					this._DeletedOn = value;
				}
			}
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_AddedBy", DbType="NVarChar(256)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this._AddedBy = value;
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(256)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DeletedBy", DbType="NVarChar(256)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this._DeletedBy = value;
				}
			}
		}
	}
	
	public partial class sp_ModuleControlGetByUserModuleIDAndControlTypeResult
	{
		
		private System.Nullable<int> _PageID;
		
		private int _ModuleControlID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private string _ControlKey;
		
		private string _ControlTitle;
		
		private string _ControlSrc;
		
		private string _IconFile;
		
		private System.Nullable<int> _ControlType;
		
		private System.Nullable<int> _DisplayOrder;
		
		private string _HelpUrl;
		
		private System.Nullable<bool> _SupportsPartialRendering;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<bool> _IsModified;
		
		private System.Nullable<System.DateTime> _AddedOn;
		
		private System.Nullable<System.DateTime> _UpdatedOn;
		
		private System.Nullable<System.DateTime> _DeletedOn;
		
		private System.Nullable<int> _PortalID;
		
		private string _AddedBy;
		
		private string _UpdatedBy;
		
		private string _DeletedBy;
		
		public sp_ModuleControlGetByUserModuleIDAndControlTypeResult()
		{
		}
		
		[Column(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this._PageID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleControlID", DbType="Int NOT NULL")]
		public int ModuleControlID
		{
			get
			{
				return this._ModuleControlID;
			}
			set
			{
				if ((this._ModuleControlID != value))
				{
					this._ModuleControlID = value;
				}
			}
		}
		
		[Column(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this._ModuleDefID = value;
				}
			}
		}
		
		[Column(Storage="_ControlKey", DbType="NVarChar(50)")]
		public string ControlKey
		{
			get
			{
				return this._ControlKey;
			}
			set
			{
				if ((this._ControlKey != value))
				{
					this._ControlKey = value;
				}
			}
		}
		
		[Column(Storage="_ControlTitle", DbType="NVarChar(50)")]
		public string ControlTitle
		{
			get
			{
				return this._ControlTitle;
			}
			set
			{
				if ((this._ControlTitle != value))
				{
					this._ControlTitle = value;
				}
			}
		}
		
		[Column(Storage="_ControlSrc", DbType="NVarChar(256)")]
		public string ControlSrc
		{
			get
			{
				return this._ControlSrc;
			}
			set
			{
				if ((this._ControlSrc != value))
				{
					this._ControlSrc = value;
				}
			}
		}
		
		[Column(Storage="_IconFile", DbType="NVarChar(100)")]
		public string IconFile
		{
			get
			{
				return this._IconFile;
			}
			set
			{
				if ((this._IconFile != value))
				{
					this._IconFile = value;
				}
			}
		}
		
		[Column(Storage="_ControlType", DbType="Int")]
		public System.Nullable<int> ControlType
		{
			get
			{
				return this._ControlType;
			}
			set
			{
				if ((this._ControlType != value))
				{
					this._ControlType = value;
				}
			}
		}
		
		[Column(Storage="_DisplayOrder", DbType="Int")]
		public System.Nullable<int> DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this._DisplayOrder = value;
				}
			}
		}
		
		[Column(Storage="_HelpUrl", DbType="NVarChar(200)")]
		public string HelpUrl
		{
			get
			{
				return this._HelpUrl;
			}
			set
			{
				if ((this._HelpUrl != value))
				{
					this._HelpUrl = value;
				}
			}
		}
		
		[Column(Storage="_SupportsPartialRendering", DbType="Bit")]
		public System.Nullable<bool> SupportsPartialRendering
		{
			get
			{
				return this._SupportsPartialRendering;
			}
			set
			{
				if ((this._SupportsPartialRendering != value))
				{
					this._SupportsPartialRendering = value;
				}
			}
		}
		
		[Column(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[Column(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this._IsDeleted = value;
				}
			}
		}
		
		[Column(Storage="_IsModified", DbType="Bit")]
		public System.Nullable<bool> IsModified
		{
			get
			{
				return this._IsModified;
			}
			set
			{
				if ((this._IsModified != value))
				{
					this._IsModified = value;
				}
			}
		}
		
		[Column(Storage="_AddedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedOn
		{
			get
			{
				return this._AddedOn;
			}
			set
			{
				if ((this._AddedOn != value))
				{
					this._AddedOn = value;
				}
			}
		}
		
		[Column(Storage="_UpdatedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedOn
		{
			get
			{
				return this._UpdatedOn;
			}
			set
			{
				if ((this._UpdatedOn != value))
				{
					this._UpdatedOn = value;
				}
			}
		}
		
		[Column(Storage="_DeletedOn", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedOn
		{
			get
			{
				return this._DeletedOn;
			}
			set
			{
				if ((this._DeletedOn != value))
				{
					this._DeletedOn = value;
				}
			}
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this._PortalID = value;
				}
			}
		}
		
		[Column(Storage="_AddedBy", DbType="NVarChar(256)")]
		public string AddedBy
		{
			get
			{
				return this._AddedBy;
			}
			set
			{
				if ((this._AddedBy != value))
				{
					this._AddedBy = value;
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(256)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this._UpdatedBy = value;
				}
			}
		}
		
		[Column(Storage="_DeletedBy", DbType="NVarChar(256)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this._DeletedBy = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
